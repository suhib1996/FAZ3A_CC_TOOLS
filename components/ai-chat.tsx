"use client"

import { useState, useRef, useEffect } from "react"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardFooter, CardHeader, CardTitle } from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import { ScrollArea } from "@/components/ui/scroll-area"
import { Bot, Send, User, X, Maximize2, Minimize2 } from "lucide-react"

type Message = {
  role: "user" | "assistant"
  content: string
}

// ูุงุนุฏุฉ ูุนุฑูุฉ ูููุฐุฌ ุงููุณุงุนุฏ ุงูุฐูู
const knowledgeBase = {
  platforms: {
    superLive: {
      name: "Super Live",
      description: "ููุตุฉ ุจุซ ูุจุงุดุฑ ุดููุฑุฉ ูุน ูุธุงู ููุงูุขุช ูุชููุฒ ููุฑุต ูุจูุฑุฉ ูููุฐูุนูู",
      salary: "150$ ุดูุฑููุง",
      workHours: "3 ุณุงุนุงุช ูููููุง ููุฏุฉ 15 ููู ุดูุฑููุง",
      downloadLink: "https://sprlv.link/y8x2c09d",
    },
    partystar: {
      name: "Party Star",
      description: "ููุตุฉ ุชูุงุนููุฉ ููุจุซ ุงููุจุงุดุฑ ูุน ููุฒุงุช ูุฑูุฏุฉ ูุฌูููุฑ ูุงุณุน ูู ุงููุณุชุฎุฏููู",
      features: ["ุนูููุฉ ูุฑุชูุนุฉ", "ุฌูุงุฆุฒ ุฃุณุจูุนูุฉ", "ูุณุงุจูุงุช ุดูุฑูุฉ"],
    },
    popoLive: {
      name: "Popo Live",
      description: "ููุตุฉ ูุชูุงููุฉ ููุจุซ ุงููุจุงุดุฑ ุชููุฑ ูุฑุตูุง ูุจูุฑุฉ ูููุฐูุนูู ุงูุฌุฏุฏ ูุงููุญุชุฑููู",
      regularSystem: "ููุงูุขุช: 3000 - 70000 ูููุฒ ููู ูููุฉุ 100,000 ูููุฒ = 10$",
      fixedSalary: "40$ ุฃุณุจูุนููุง ููุงุจู 18 ุณุงุนุฉ ุนูู ูุชุญููู 500,000 ูููุฒ",
      agencyId: "4207397",
      downloadLink: "https://h5-global.v.show/inviteNew/share?c=poppo&link_id=5375297&user_id=4207397",
    },
  },
  financial: {
    withdrawal: {
      methods: ["ุชุญููู ุจููู", "USDT", "Bitcoin", "ุงุณุชูุงู ููุฏู"],
      minimumAmount: "10$",
      schedule: "ูููู 16 ู 30 ูู ูู ุดูุฑ",
    },
    advance: {
      requirements: "ุชุญููู ูุฏู 500$+ ููุฏุฉ 3 ุฃุดูุฑ",
      process: "ุชุฎุตูุต ุงููุจูุบ ูู ุงูุฑุตูุฏ ุงููุงุฏู",
    },
  },
  badges: {
    types: [
      { name: "ุญุณุงุจ ูุคูุฏ", symbol: "โ", color: "ุฒุฑูุงุก", benefits: "ุชุฎููุถ ุนูููุงุช ุงูุณุญุจ ูุฃููููุฉ ูู ุงูุจุญุซ" },
      { name: "ุญุณุงุจ ูุถูู", symbol: "๐ค", color: "ุฐูุจูุฉ", benefits: "ูุตูู ูุจูุฑ ุฅูู ุงูููุฒุงุช ุงูุฌุฏูุฏุฉ" },
      { name: "ุญุณุงุจ ูุดุฑู", symbol: "โญ", color: "ุญูุฑุงุก", benefits: "ุตูุงุญูุงุช ูุฑุงูุจุฉ ุงููุญุชูู" },
      { name: "ุญุณุงุจ ุจุฑููุฑ", symbol: "๐ค", color: "ุฎุถุฑุงุก", benefits: "ุนูููุฉ ุฅุถุงููุฉ ุนูู ุฃุฑุจุงุญ ุงููุญุงููู" },
    ],
  },
  competitions: {
    types: [
      { name: "ุชุญุฏู ุงููุดุงูุฏุงุช", description: "ูุณุงุจูุฉ ูุชุญููู ุฃูุจุฑ ุนุฏุฏ ูู ุงููุดุงูุฏุงุช" },
      { name: "ุชุญุฏู ุงูุฅูุฑุงุฏุงุช", description: "ูุณุงุจูุฉ ูุชุญููู ุฃุนูู ุฅูุฑุงุฏุงุช" },
    ],
    prizes: ["ููุงูุขุช ููุฏูุฉ", "ุชุฑููุฉ ุงูุนุถููุฉ", "ุดุงุฑุงุช ุฎุงุตุฉ"],
  },
  contacts: {
    femaleSupervisor: { name: "ููุณู", whatsapp: "https://wa.me/963942236479" },
    maleSupervisor: { name: "ุงุจู ุงูุดูุฎ", whatsapp: "https://wa.me/905526455582" },
    agent: { whatsapp: "https://wa.me/962781477774", email: "halman555@yahoo.com" },
  },
  membership: {
    basic: { name: "ุฃุณุงุณูุฉ", target: "ูููุถูููู ุงูุนุงุฏููู ูุงูุฌุฏุฏ" },
    premium: { name: "ูููุฒุฉ", target: "ูููุฐูุนูู ุงูุชูุจุงุช", features: ["ุงูุชูุงุฒุงุช ุฎุงุตุฉ", "ุดุงุฑุฉ ูููุฒ"] },
  },
}

export function AIChat() {
  const [messages, setMessages] = useState<Message[]>([
    {
      role: "assistant",
      content: "ูุฑุญุจูุง! ุฃูุง ุงููุณุงุนุฏ ุงูุฐูู ููุธุงู ุฅุฏุงุฑุฉ ุงูููุงูุงุช. ููู ูููููู ูุณุงุนุฏุชู ุงููููุ",
    },
  ])
  const [input, setInput] = useState("")
  const [isLoading, setIsLoading] = useState(false)
  const [isMinimized, setIsMinimized] = useState(true)
  const [isFullScreen, setIsFullScreen] = useState(false)
  const scrollAreaRef = useRef<HTMLDivElement>(null)

  useEffect(() => {
    if (scrollAreaRef.current) {
      scrollAreaRef.current.scrollTop = scrollAreaRef.current.scrollHeight
    }
  }, [messages])

  // ูุธููุฉ ูุชุญููู ุงุณุชูุณุงุฑ ุงููุณุชุฎุฏู ูุฅูุดุงุก ุฑุฏ ููุงุณุจ
  const analyzeQuery = (query: string): string => {
    const queryLower = query.toLowerCase()

    // ุงูุชุญูู ูู ุงูุงุณุชูุณุงุฑุงุช ุงููุชุนููุฉ ุจุงูููุตุงุช
    if (
      queryLower.includes("ููุตุงุช") ||
      queryLower.includes("ุจุซ") ||
      queryLower.includes("ุงูุจุซ") ||
      queryLower.includes("super") ||
      queryLower.includes("ุณูุจุฑ") ||
      queryLower.includes("party") ||
      queryLower.includes("ุจุงุฑุชู") ||
      queryLower.includes("popo") ||
      queryLower.includes("ุจูุจู")
    ) {
      if (queryLower.includes("super") || queryLower.includes("ุณูุจุฑ")) {
        return `ููุตุฉ ${knowledgeBase.platforms.superLive.name} ูู ${knowledgeBase.platforms.superLive.description}. 
        ุชูุฏู ุฑุงุชุจูุง ุซุงุจุชูุง ูุฏุฑู ${knowledgeBase.platforms.superLive.salary} ููุงุจู ${knowledgeBase.platforms.superLive.workHours}.
        ููููู ุชุญููู ุงูุชุทุจูู ูู ุฎูุงู ุงูุฑุงุจุท: ${knowledgeBase.platforms.superLive.downloadLink}
        ูู ุชุฑุบุจ ูู ูุนุฑูุฉ ุงููุฒูุฏ ุนู ุดุฑูุท ุงูุงูุถูุงู ุฃู ุงูููุงูุขุชุ`
      }

      if (queryLower.includes("party") || queryLower.includes("ุจุงุฑุชู")) {
        return `ููุตุฉ ${knowledgeBase.platforms.partystar.name} ูู ${knowledgeBase.platforms.partystar.description}.
        ุชุชููุฒ ุงูููุตุฉ ุจู ${knowledgeBase.platforms.partystar.features.join("ุ ")}.
        ูู ุชุฑุบุจ ูู ูุนุฑูุฉ ุงููุฒูุฏ ุนู ููููุฉ ุงูุงูุถูุงู ุฅูู ูุฐู ุงูููุตุฉุ`
      }

      if (queryLower.includes("popo") || queryLower.includes("ุจูุจู")) {
        return `ููุตุฉ ${knowledgeBase.platforms.popoLive.name} ูู ${knowledgeBase.platforms.popoLive.description}.
        ุชูุฏู ูุธุงููู ููุนูู:
        1. ุงููุธุงู ุงูุนุงุฏู: ${knowledgeBase.platforms.popoLive.regularSystem}
        2. ูุธุงู ุงูุฑุงุชุจ ุงูุซุงุจุช: ${knowledgeBase.platforms.popoLive.fixedSalary}
        ููุงูุถูุงูุ ูู ุจุชุญููู ุงูุชุทุจูู ูุฅุฏุฎุงู ID ุงูููุงูุฉ: ${knowledgeBase.platforms.popoLive.agencyId}
        ุฑุงุจุท ุงูุชุญููู: ${knowledgeBase.platforms.popoLive.downloadLink}`
      }

      return `ูุญู ูุฏุนู ุซูุงุซ ููุตุงุช ุฑุฆูุณูุฉ ููุจุซ ุงููุจุงุดุฑ:
      1. ${knowledgeBase.platforms.superLive.name}: ${knowledgeBase.platforms.superLive.description}
      2. ${knowledgeBase.platforms.partystar.name}: ${knowledgeBase.platforms.partystar.description}
      3. ${knowledgeBase.platforms.popoLive.name}: ${knowledgeBase.platforms.popoLive.description}
      
      ูู ุชุฑุบุจ ูู ูุนุฑูุฉ ุงููุฒูุฏ ุนู ููุตุฉ ูุนููุฉุ`
    }

    // ุงูุชุญูู ูู ุงูุงุณุชูุณุงุฑุงุช ุงููุงููุฉ
    if (
      queryLower.includes("ุณุญุจ") ||
      queryLower.includes("ุฅูุฏุงุน") ||
      queryLower.includes("ุชุญููู") ||
      queryLower.includes("ูุงู") ||
      queryLower.includes("ุฑุงุชุจ") ||
      queryLower.includes("ุณููุฉ") ||
      queryLower.includes("ุฃุฑุจุงุญ") ||
      queryLower.includes("ุฏูุน")
    ) {
      if (queryLower.includes("ุณุญุจ") || queryLower.includes("ุชุญููู")) {
        return `ูููุฑ ุนุฏุฉ ุทุฑู ููุณุญุจ: ${knowledgeBase.financial.withdrawal.methods.join("ุ ")}.
        ุงูุญุฏ ุงูุฃุฏูู ููุณุญุจ ูู ${knowledgeBase.financial.withdrawal.minimumAmount}.
        ูุชู ุงูุณุญุจ ุงูุชููุงุฆู ุฅูู ุญุณุงุจ ุงููููู ${knowledgeBase.financial.withdrawal.schedule} ุฅุฐุง ุชู ุชูุนูู ูุฐู ุงูุฎุฏูุฉ.
        ูู ุชุญุชุงุฌ ุฅูู ูุณุงุนุฏุฉ ูู ุฅุฌุฑุงุก ุนูููุฉ ุณุญุจุ`
      }

      if (queryLower.includes("ุณููุฉ") || queryLower.includes("ูุฑุถ")) {
        return `ููููู ุงูุญุตูู ุนูู ุณููุฉ ุฅุฐุง ุญููุช ${knowledgeBase.financial.advance.requirements}.
        ูุชู ${knowledgeBase.financial.advance.process}.
        ูู ุชุฑุบุจ ูู ูุนุฑูุฉ ุงููุฒูุฏ ุนู ุดุฑูุท ุงูุณููุ`
      }

      return `ูููุฑ ุฎุฏูุงุช ูุงููุฉ ูุชูุงููุฉ ุชุดูู:
      - ุงูุณุญุจ: ูุชุงุญ ุนุจุฑ ${knowledgeBase.financial.withdrawal.methods.join("ุ ")}
      - ุงูุณูู: ูุชุงุญุฉ ุจุนุฏ ${knowledgeBase.financial.advance.requirements}
      - ุชุญููู ุงูุฃุฑุจุงุญ: ูุชู ุชููุงุฆููุง ${knowledgeBase.financial.withdrawal.schedule}
      
      ูู ุชุญุชุงุฌ ูุณุงุนุฏุฉ ูู ุฅุฌุฑุงุก ุนูููุฉ ูุงููุฉ ูุนููุฉุ`
    }

    // ุงูุชุญูู ูู ุงูุงุณุชูุณุงุฑุงุช ุงููุชุนููุฉ ุจุงูุดุงุฑุงุช ูุงููุณุงุจูุงุช
    if (
      queryLower.includes("ุดุงุฑุงุช") ||
      queryLower.includes("ูุณุงุจูุงุช") ||
      queryLower.includes("ุฌูุงุฆุฒ") ||
      queryLower.includes("ุชุญุฏู") ||
      queryLower.includes("ููุงูุขุช")
    ) {
      if (queryLower.includes("ุดุงุฑุงุช")) {
        const badgesInfo = knowledgeBase.badges.types
          .map((badge) => `${badge.name} (${badge.symbol} ${badge.color}): ${badge.benefits}`)
          .join("\n- ")

        return `ูุธุงู ุงูุดุงุฑุงุช ูุฏููุง ูุชุถูู ุนุฏุฉ ุฃููุงุน:
        - ${badgesInfo}
        
        ูู ุชุฑุบุจ ูู ูุนุฑูุฉ ููููุฉ ุงูุญุตูู ุนูู ุดุงุฑุฉ ูุนููุฉุ`
      }

      if (queryLower.includes("ูุณุงุจูุงุช") || queryLower.includes("ุชุญุฏู")) {
        const competitionsInfo = knowledgeBase.competitions.types
          .map((comp) => `${comp.name}: ${comp.description}`)
          .join("\n- ")

        return `ููุฏู ูุณุงุจูุงุช ุฏูุฑูุฉ ูุซู:
        - ${competitionsInfo}
        
        ุงูุฌูุงุฆุฒ ุชุดูู: ${knowledgeBase.competitions.prizes.join("ุ ")}
        
        ูู ุชุฑุบุจ ูู ูุนุฑูุฉ ุงููุฒูุฏ ุนู ุงููุณุงุจูุงุช ุงููุงุฏูุฉุ`
      }

      return `ูุธุงู ุงูุดุงุฑุงุช ูุงููุณุงุจูุงุช ูุฏููุง ูุชูุญ ูููุฐูุนูู ูุณุจ ุดุงุฑุงุช ุชูุฏูุฑูุฉ ูููุงูุขุช ูููุฉ.
      ูุฏููุง ${knowledgeBase.badges.types.length} ุฃููุงุน ูู ุงูุดุงุฑุงุช ููุฅูุฌุงุฒุงุช ูุงูุนุถููุงุช.
      ููุง ููุฏู ูุณุงุจูุงุช ุฏูุฑูุฉ ูุซู ${knowledgeBase.competitions.types.map((c) => c.name).join(" ู")}.
      
      ูู ุชุฑุบุจ ูู ูุนุฑูุฉ ุงููุฒูุฏ ุนู ุงูุดุงุฑุงุช ุฃู ุงููุณุงุจูุงุชุ`
    }

    // ุงูุชุญูู ูู ุงูุงุณุชูุณุงุฑุงุช ุงููุชุนููุฉ ุจุงูุชุณุฌูู ูุงูุงูุถูุงู
    if (
      queryLower.includes("ุชุณุฌูู") ||
      queryLower.includes("ุญุณุงุจ") ||
      queryLower.includes("ุงูุถูุงู") ||
      queryLower.includes("ุงุดุชุฑุงู") ||
      queryLower.includes("ุนุถููุฉ")
    ) {
      if (queryLower.includes("ุนุถููุฉ")) {
        return `ููุฏู ููุนูู ูู ุงูุนุถููุงุช:
        1. ${knowledgeBase.membership.basic.name}: ${knowledgeBase.membership.basic.target}
        2. ${knowledgeBase.membership.premium.name}: ${knowledgeBase.membership.premium.target} ูุน ${knowledgeBase.membership.premium.features.join(" ู")}
        
        ูู ุชุฑุบุจ ูู ูุนุฑูุฉ ุงููุฒูุฏ ุนู ูุฒุงูุง ูู ุนุถููุฉุ`
      }

      return `ููููู ุงูุชุณุฌูู ูู ููุงูุฉ ุฎูู ูุฎู ุจุณูููุฉ ูู ุฎูุงู ุตูุญุฉ ุฅูุดุงุก ุญุณุงุจ.
      ุฎุทูุงุช ุงูุชุณุฌูู:
      1. ุฅุฏุฎุงู ุฑูู ุงููุงุชู ูุชููู ุฑูุฒ ุงูุชุญูู ุนุจุฑ SMS
      2. ุชุนุจุฆุฉ ุงูุจูุงูุงุช ุงูุดุฎุตูุฉ (ุงูุงุณูุ ุชุงุฑูุฎ ุงููููุงุฏุ ุงูุจุฑูุฏ ุงูุฅููุชุฑููู)
      3. ุฅุฏุฎุงู ููุฏ ุงูุฅุญุงูุฉ (ุงุฎุชูุงุฑู)
      4. ุฑูุน ุตูุฑุฉ ุงููููุฉ ูููุฑุงุฌุนุฉ
      
      ูู ุชุญุชุงุฌ ูุณุงุนุฏุฉ ูู ุนูููุฉ ุงูุชุณุฌููุ`
    }

    // ุงูุชุญูู ูู ุงูุงุณุชูุณุงุฑุงุช ุงููุชุนููุฉ ุจุงูุชูุงุตู ูุงูุฏุนู
    if (
      queryLower.includes("ุชูุงุตู") ||
      queryLower.includes("ุงุชุตุงู") ||
      queryLower.includes("ุฏุนู") ||
      queryLower.includes("ูุดุฑู") ||
      queryLower.includes("ูุดุฑูุฉ") ||
      queryLower.includes("ูููู") ||
      queryLower.includes("ูุงุชุณุงุจ") ||
      queryLower.includes("whatsapp")
    ) {
      if (queryLower.includes("ูุดุฑูุฉ") || queryLower.includes("ูุณุงุฆูุฉ") || queryLower.includes("ููุณู")) {
        return `ููููู ุงูุชูุงุตู ูุน ุงููุดุฑูุฉ ุงููุณุงุฆูุฉ (${knowledgeBase.contacts.femaleSupervisor.name}) ุนุจุฑ ูุงุชุณุงุจ: ${knowledgeBase.contacts.femaleSupervisor.whatsapp}`
      }

      if (queryLower.includes("ูุดุฑู") || queryLower.includes("ุฑุฌุงูู") || queryLower.includes("ุงุจู ุงูุดูุฎ")) {
        return `ููููู ุงูุชูุงุตู ูุน ุงููุดุฑู ุงูุฑุฌุงูู (${knowledgeBase.contacts.maleSupervisor.name}) ุนุจุฑ ูุงุชุณุงุจ: ${knowledgeBase.contacts.maleSupervisor.whatsapp}`
      }

      if (queryLower.includes("ูููู")) {
        return `ููููู ุงูุชูุงุตู ูุน ุงููููู ุนุจุฑ:
        - ูุงุชุณุงุจ: ${knowledgeBase.contacts.agent.whatsapp}
        - ุงูุจุฑูุฏ ุงูุฅููุชุฑููู: ${knowledgeBase.contacts.agent.email}`
      }

      return `ููููู ุงูุชูุงุตู ูุนูุง ุนุจุฑ ุนุฏุฉ ูููุงุช:
      - ุงููุดุฑูุฉ ุงููุณุงุฆูุฉ (${knowledgeBase.contacts.femaleSupervisor.name}): ${knowledgeBase.contacts.femaleSupervisor.whatsapp}
      - ุงููุดุฑู ุงูุฑุฌุงูู (${knowledgeBase.contacts.maleSupervisor.name}): ${knowledgeBase.contacts.maleSupervisor.whatsapp}
      - ุงููููู: ${knowledgeBase.contacts.agent.whatsapp}
      - ุงูุจุฑูุฏ ุงูุฅููุชุฑููู: ${knowledgeBase.contacts.agent.email}
      
      ูุฑูู ุงูุฏุนู ูุชุงุญ ุนูู ูุฏุงุฑ ุงูุณุงุนุฉ ููุณุงุนุฏุชู.`
    }

    // ุฑุฏ ุงูุชุฑุงุถู ุฅุฐุง ูู ูุชู ุงูุชุนุฑู ุนูู ุงูุงุณุชูุณุงุฑ
    return `ุดูุฑูุง ูุชูุงุตูู ูุนูุง. ูููููู ูุณุงุนุฏุชู ูู ุงูุนุฏูุฏ ูู ุงูุฃููุฑ ุงููุชุนููุฉ ุจููุงูุฉ ุฎูู ูุฎูุ ูุซู:
    - ุงูููุตุงุช ุงููุฏุนููุฉ (Super Liveุ Party Starุ Popo Live)
    - ุงูุฎุฏูุงุช ุงููุงููุฉ (ุงูุณุญุจุ ุงูุฅูุฏุงุนุ ุงูุณูู)
    - ูุธุงู ุงูุดุงุฑุงุช ูุงููุณุงุจูุงุช
    - ููููุฉ ุงูุงูุถูุงู ุฅูููุง
    - ุงูุชูุงุตู ูุน ูุฑูู ุงูุฏุนู
    
    ูุง ุงูุฐู ุชุฑุบุจ ูู ูุนุฑูุฉ ุงููุฒูุฏ ุนููุ`
  }

  const handleSend = async () => {
    if (input.trim() === "") return

    const userMessage: Message = {
      role: "user",
      content: input,
    }

    setMessages((prev) => [...prev, userMessage])
    setInput("")
    setIsLoading(true)

    try {
      // ุงุณุชุฎุฏุงู ูููุฐุฌ ุฎูู ูุฎู AI ูุชุญููู ุงูุงุณุชูุณุงุฑ ูุฅูุดุงุก ุฑุฏ
      setTimeout(() => {
        const response = analyzeQuery(userMessage.content)

        const assistantMessage: Message = {
          role: "assistant",
          content: response,
        }
        setMessages((prev) => [...prev, assistantMessage])
        setIsLoading(false)
      }, 1000)
    } catch (error) {
      console.error("Error sending message:", error)
      setIsLoading(false)
    }
  }

  if (isMinimized) {
    return (
      <div className="fixed bottom-4 left-4 z-50">
        <Button onClick={() => setIsMinimized(false)} className="rounded-full h-14 w-14 shadow-lg">
          <Bot className="h-6 w-6" />
        </Button>
      </div>
    )
  }

  return (
    <div
      className={`fixed z-50 ${
        isFullScreen ? "inset-0 flex items-center justify-center bg-background/80 backdrop-blur-sm" : "bottom-4 left-4"
      }`}
    >
      <Card
        className={`${isFullScreen ? "w-full max-w-2xl h-[80vh]" : "w-full max-w-md"} flex flex-col shadow-xl`}
        role="dialog"
        aria-modal="true"
        aria-labelledby="ai-chat-title"
        aria-describedby="ai-chat-description"
      >
        <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
          <CardTitle id="ai-chat-title" className="flex items-center gap-2">
            <Bot className="h-5 w-5" />
            ูุณุงุนุฏ ุฎูู ูุฎู ุงูุฐูู
          </CardTitle>
          <p id="ai-chat-description" className="sr-only">
            ูุงูุฐุฉ ูุญุงุฏุซุฉ ูุน ูุณุงุนุฏ ุฎูู ูุฎู ุงูุฐูู. ููููู ุทุฑุญ ุฃุณุฆูุชู ูุงูุญุตูู ุนูู ุฅุฌุงุจุงุช ููุฑูุฉ.
          </p>
          <div className="flex items-center gap-1">
            {isFullScreen ? (
              <Button variant="ghost" size="icon" onClick={() => setIsFullScreen(false)}>
                <Minimize2 className="h-4 w-4" />
              </Button>
            ) : (
              <Button variant="ghost" size="icon" onClick={() => setIsFullScreen(true)}>
                <Maximize2 className="h-4 w-4" />
              </Button>
            )}
            <Button variant="ghost" size="icon" onClick={() => setIsMinimized(true)}>
              <X className="h-4 w-4" />
            </Button>
          </div>
        </CardHeader>
        <CardContent className="flex-grow overflow-hidden p-4">
          <ScrollArea className="h-[350px] pr-4" ref={scrollAreaRef}>
            <div className="space-y-4">
              {messages.map((message, index) => (
                <div key={index} className={`flex ${message.role === "user" ? "justify-end" : "justify-start"}`}>
                  <div
                    className={`flex items-start gap-2 max-w-[80%] ${
                      message.role === "user" ? "bg-primary text-primary-foreground" : "bg-muted"
                    } rounded-lg p-3`}
                  >
                    {message.role === "assistant" && <Bot className="h-5 w-5 mt-1 shrink-0" />}
                    <div className="text-sm whitespace-pre-line">{message.content}</div>
                    {message.role === "user" && <User className="h-5 w-5 mt-1 shrink-0" />}
                  </div>
                </div>
              ))}
              {isLoading && (
                <div className="flex justify-start">
                  <div className="flex items-center gap-2 bg-muted rounded-lg p-3">
                    <Bot className="h-5 w-5" />
                    <div className="text-sm">ุฌุงุฑู ุงููุชุงุจุฉ...</div>
                  </div>
                </div>
              )}
            </div>
          </ScrollArea>
        </CardContent>
        <CardFooter className="p-4 pt-0">
          <form
            onSubmit={(e) => {
              e.preventDefault()
              handleSend()
            }}
            className="flex w-full items-center space-x-2 space-x-reverse"
          >
            <Input
              placeholder="ุงูุชุจ ุฑุณุงูุชู ููุง..."
              value={input}
              onChange={(e) => setInput(e.target.value)}
              disabled={isLoading}
              className="flex-grow"
            />
            <Button type="submit" size="icon" disabled={isLoading || !input.trim()}>
              <Send className="h-4 w-4" />
            </Button>
          </form>
        </CardFooter>
      </Card>
    </div>
  )
}
